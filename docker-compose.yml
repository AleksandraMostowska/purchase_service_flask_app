version: '3.8'

services:
  mysql:
    image: mysql:latest
    volumes:
      - mysql:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: db_1
      MYSQL_USER: user
      MYSQL_PASSWORD: user1234
      MYSQL_TCP_PORT: 3307
    ports:
      - '3307:3307'
    expose:
      - 3307
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -P 3307 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
    networks:
      - am-clients-products

  mysql_test:
    image: mysql:latest
    volumes:
      - mysql_test:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: db_1
      MYSQL_USER: user
      MYSQL_PASSWORD: user1234
      MYSQL_TCP_PORT: 3308
    ports:
      - '3308:3308'
    expose:
      - 3308
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -P 3308 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
    networks:
      - am-clients-products

  flask:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    command: gunicorn --bind 0.0.0.0:8000 --workers 4 'src.app.create_app:main()' --reload
    volumes:
      - ./:/webapp
    depends_on:
      mysql:
        condition: service_healthy
      mysql_test:
        condition: service_healthy
    ports:
      - "8000:8000"
    networks:
      am-clients-products:
        aliases:
          - flask-app

  nginx:
    restart: always
    image: nginx:latest
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - '80:80'
    depends_on:
      - flask
    networks:
      - am-clients-products

volumes:
  mysql:
  mysql_test:

networks:
  am-clients-products:

